/*
 * Online Book Store API
 * Endpoints for managing books
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BookDto;
import org.openapitools.client.model.CreateBookRequestDto;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BookManagementApi
 */
@Disabled
public class BookManagementApiTest {

    private final BookManagementApi api = new BookManagementApi();

    /**
     * Get all books
     *
     * API for getting list of all available books
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksGetTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        String sort = null;
        List<BookDto> response = api.booksGet(page, size, sort);
        // TODO: test validations
    }

    /**
     * Delete a book by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksIdDeleteTest() throws ApiException {
        Integer id = null;
        api.booksIdDelete(id);
        // TODO: test validations
    }

    /**
     * Get a book by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksIdGetTest() throws ApiException {
        Integer id = null;
        BookDto response = api.booksIdGet(id);
        // TODO: test validations
    }

    /**
     * Update a book by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksIdPutTest() throws ApiException {
        Integer id = null;
        CreateBookRequestDto createBookRequestDto = null;
        BookDto response = api.booksIdPut(id, createBookRequestDto);
        // TODO: test validations
    }

    /**
     * Create a new book
     *
     * API for creating a new book
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksPostTest() throws ApiException {
        CreateBookRequestDto createBookRequestDto = null;
        BookDto response = api.booksPost(createBookRequestDto);
        // TODO: test validations
    }

    /**
     * Searching books with parameters
     *
     * API for searching books
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void booksSearchGetTest() throws ApiException {
        String title = null;
        String author = null;
        List<BookDto> response = api.booksSearchGet(title, author);
        // TODO: test validations
    }

}
